import { ElementRef, Renderer2, OnDestroy, AfterViewInit, OnChanges, EventEmitter, AfterViewChecked, QueryList } from '@angular/core';
import { DragScrollItemDirective } from './ngx-drag-scroll-item';
export declare class DragScrollComponent implements OnDestroy, AfterViewInit, OnChanges, AfterViewChecked {
    private _elementRef;
    private _renderer;
    private _scrollbarHidden;
    private _disabled;
    private _xDisabled;
    private _yDisabled;
    private _dragDisabled;
    private _snapDisabled;
    private _snapOffset;
    isPressed: boolean;
    isScrolling: boolean;
    scrollTimer: number;
    scrollToTimer: number;
    downX: number;
    downY: number;
    displayType: string | null;
    elWidth: string | null;
    elHeight: string | null;
    parentNode: HTMLElement | null;
    _contentRef: ElementRef;
    _children: QueryList<DragScrollItemDirective>;
    wrapper: HTMLDivElement | null;
    scrollbarWidth: string | null;
    currIndex: number;
    isAnimating: boolean;
    scrollReachesRightEnd: boolean;
    prevChildrenLength: number;
    reachesLeftBound: EventEmitter<boolean>;
    reachesRightBound: EventEmitter<boolean>;
    scrollbarHidden: boolean;
    disabled: boolean;
    xDisabled: boolean;
    yDisabled: boolean;
    dragDisabled: boolean;
    snapDisabled: boolean;
    snapOffset: number;
    constructor(_elementRef: ElementRef, _renderer: Renderer2);
    ngOnChanges(): void;
    ngAfterViewInit(): void;
    ngAfterViewChecked(): void;
    ngOnDestroy(): void;
    onMouseMoveHandler(event: MouseEvent): void;
    onMouseDownHandler(event: MouseEvent): void;
    onScrollHandler(event: Event): void;
    onMouseUpHandler(event: MouseEvent): void;
    moveLeft(): void;
    moveRight(): void;
    moveTo(index: number): void;
    checkNavStatus(): void;
    private disableScroll(axis);
    private enableScroll(axis);
    private hideScrollbar();
    private showScrollbar();
    private checkScrollbar();
    private setScrollBar();
    private getScrollbarWidth();
    private scrollTo(element, to, duration);
    private locateCurrentIndex(snap?);
    private currentChildWidth(cb);
    private toChildrenLocation();
    private markElDimension();
}
